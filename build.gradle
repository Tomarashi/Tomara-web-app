import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.jetbrains.kotlin.jvm' version '1.7.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.7.22'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.7.22'
	id 'com.github.node-gradle.node'version '3.5.1'
}

def frontEndDir = 'front-end'
def frontEndBuildDir = 'build'
def resourcesFolderDir = 'src/main/resources'
def staticFolderDir = "${resourcesFolderDir}/static"

group = 'ge.tomara'
version = '1.0.0'
sourceCompatibility = '13'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'mysql:mysql-connector-java'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

node {
	download = false
	allowInsecureProtocol = null
	npmInstallCommand = 'install'
	nodeProjectDir = file("${project.projectDir}/${frontEndDir}")
}

tasks.withType(KotlinCompile).configureEach {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '13'
	}
}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		showStandardStreams = true
	}
}

tasks.register('npmRunBuild', NpmTask) {
	dependsOn npmInstall
    args = ['run', 'build']
}

tasks.register('staticContentBuild', Copy) {
	dependsOn npmRunBuild
	from "${project.projectDir}/${frontEndDir}/${frontEndBuildDir}"
	into "${project.projectDir}/${staticFolderDir}"
	doFirst {
		def treeDir = "${project.projectDir}/${staticFolderDir}"
		delete fileTree(dir: treeDir, exclude: "**/external/**")
	}
}

build.dependsOn staticContentBuild
bootRun.dependsOn staticContentBuild
bootJar.dependsOn staticContentBuild
